// Client protocol definitions - revision 1
option java_package = "org.kontalk.client";
option java_outer_classname = "Protocol";
option optimize_for = LITE_RUNTIME;

enum Status {
    STATUS_SUCCESS = 0;
    STATUS_ERROR = 1;
    STATUS_BUSY = 2;
    STATUS_VERIFICATION_FAILED = 3;
    STATUS_INVALID_PHONE_NUMBER = 4;
    STATUS_TTL_EXPIRED = 5;
    STATUS_USER_NOTFOUND = 6;
    STATUS_MESSAGE_NOTFOUND = 7;
}

message ServerInfo {
    required string version = 1;
    required uint32 client_protocol = 2;
    required uint32 server_protocol = 3;
    required string fingerprint = 4;
    // supported features
    repeated string supports = 5;
}

// phone number validation
message PhoneValidation {
    required Status status = 1;
    optional string sms_from = 2;
}

// authentication token creation
message Authentication {
    required Status status = 1;
    optional string token = 2;
}

// message received response
message Received {
    repeated ReceivedEntry entry = 1;
}

// message received response entry
message ReceivedEntry {
    required Status status = 1;
    required string message_id = 2;
}

// message sent response
message MessageSent {
    repeated MessageSentEntry entry = 1;
}

// message sent response entry
message MessageSentEntry {
    required Status status = 1;
    required string user_id = 2;
    optional string message_id = 3;
}

// user lookup request
message LookupRequest {
    repeated string user_id = 1;
}

// user lookup response
message LookupResponse {
    repeated LookupResponseEntry entry = 1;
}

// user lookup response entry
message LookupResponseEntry {
    required string user_id = 1;
    optional uint64 timestamp = 2;
    optional string status = 3;
}

// new messages (polling)
message NewMessages {
    required Status status = 1;
    repeated NewMessageEntry message = 2;
}

// new message entry
message NewMessageEntry {
    required string message_id = 1;
    required string sender = 2;
    repeated string group = 3;
    optional string original_id = 4;
    required string mime = 5;
    required bool encrypted = 6;
    required bytes content = 7;
    optional string url = 8;
}

// server list
message ServerList {
    required uint64 timestamp = 1;
    repeated string address = 2;
}

// user update
message UserUpdate {
    required Status status = 1;
}
